#!/usr/bin/env sh

# This base setup script will install a minimal work environment,
# complete with all the bells and whistles needed to start working properly.
# ---
# Other packages not included here can be installed separately,
# suggestions: x11-xkb-utils, qtile/i3, rioterm/kitty, input-remapper.




### Functions
#############

sudo_privilege () {
    id -Gn 2>/dev/null | grep -qw "sudo"
}
# ---
testing_setup() {
    [ -s /etc/apt/sources.list ] && grep '^[^#]' /etc/apt/sources.list >/dev/null || return
    repo="deb http://deb.debian.org/debian testing main contrib"
    if ! grep -E "^deb[[:space:]]*http://deb.debian.org/debian[[:space:]]*(testing|unstable)" /etc/apt/sources.list >/dev/null 2>&1; then
        { echo "$repo" | sudo tee -a /etc/apt/sources.list >/dev/null; } && sudo cp "${SCRIPTPATH}/base/preferences" "/etc/apt/" >/dev/null 2>&1
    fi
}
# ---
store_conf () {
    backup_conf () {
        if [ -f "$1" ]; then
            if [ -L "$1" ]; then
                unlink "$1"
            else
                mv "$1" "${RESTORE}/"
            fi
        fi
    }
    RESTORE="${HOME}/.podeen_recovery"
    mkdir -p "$RESTORE"
    backup_conf "${HOME}/.bash_logout"
    backup_conf "${HOME}/.bashrc"
    backup_conf "${HOME}/.profile"
    backup_conf "${HOME}/.tmux.conf"
    backup_conf "${HOME}/.vimrc"
    backup_conf "${HOME}/.local/bin/fetch.sh"
}




### Checks
##########

if [ "$(id -u)" -eq 0 ]; then
    printf "\n%s"   "This script MUST NOT be run as root user since it makes changes"
    printf "\n%s"   "to the \$HOME directory of the \$USER executing this script."
    printf "\n%s"   "The \$HOME directory of the root user is, of course, '/root'."
    printf "\n%s"   "We don't want to mess around in there. So run this script as a"
    printf "\n%s\n" "normal user. You will be asked for a sudo password when necessary."
    exit 1
fi
# ---
if [ -d "${HOME}/.podeen_recovery" ]; then
    printf "\n%s"   "════════════════ Warning: podeen already set ════════════════"
    printf "\n%s\n" "Remove ~/.podeen_recovery directory and run this script again"
    exit 1
fi




### Podeen-Base
###############

cat << EOF
.   .   ___         _                ___
|\\_/|  | _ \\___  __| |___ ___ _ _   | _ ) __ _ ___ ___
(O.o)  |  _/ _ \\/ _\` / -_) -_) ' \\  | _ \\/ _\` (_-</ -_)
(> <)  |_| \\___/\\__,_\\___\\___|_||_| |___/\\__,_/__/\\___|

EOF




### Path & Dependencies
#######################

SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )" || exit 1
if sudo_privilege; then
    while IFS='' read -r OSRELEASELINE; do
        case "$OSRELEASELINE" in
            ID=debian|ID=\"debian\"|VERSION_ID=12|VERSION_ID=\"12\") LINECOUNT=$((LINECOUNT + 1));;
        esac
        [ "${LINECOUNT:-0}" -eq 2 ] && { testing_setup; break; }
    done < /etc/os-release 2>/dev/null
    # ---
    sudo sh -c '
        apt-get update && apt-get upgrade -qq -y &&
        apt-get install -qq -y bash bash-completion fzy file fd-find xclip trash-cli procps less git tmux vim exuberant-ctags wamerican
    '
fi




### Start
#########

store_conf
cp "${SCRIPTPATH}/base/.profile" "${HOME}/"
cp "${SCRIPTPATH}/base/.bashrc" "${HOME}/"
cp "${SCRIPTPATH}/base/.bash_logout" "${HOME}/"
cp "${SCRIPTPATH}/base/.vimrc" "${HOME}/"
cp "${SCRIPTPATH}/base/.tmux.conf" "${HOME}/"
mkdir -p "${HOME}/.local/bin/" && cp "${SCRIPTPATH}/base/fetch.sh" "${HOME}/.local/bin/"
# ---
if sudo_privilege; then
    sudo chsh -s "$(command -v bash)" "$USER"
fi




### Finish
##########

printf "\n%s\n" "setup complete"
